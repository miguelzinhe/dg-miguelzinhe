{"version":3,"file":"component---src-templates-sitemap-jsx-4b342f16b8414eefff2b.js","mappings":"yKAGMA,EAASC,EAAQ,MAER,SAASC,EAAS,GAAY,IAAVC,EAAK,EAALA,MACjC,OACE,uBAAKC,UAAU,8BACZD,EAAME,KAAI,SAACC,EAAMC,GAAK,aACrB,uBACEH,UAAU,qBACVI,IAAKD,EACLE,KAAK,SACLC,SAAUH,EACVI,QAAS,YACPC,EAAAA,EAAAA,IAASN,EAAKO,KAAKC,OAAOC,KAC5B,EACAC,UAAW,SAAAC,GACa,KAAlBA,EAAMC,UAAgBN,EAAAA,EAAAA,IAASN,EAAKO,KAAKC,OAAOC,KACtD,GAEA,sBAAIX,UAAU,cACZ,gBAAC,KAAI,CAACe,GAAE,GAAKb,EAAKO,KAAKC,OAAOC,MAC3BT,EAAKO,KAAKC,OAAOM,QAGtB,qBAAGhB,UAAU,gBACVE,EAAKO,KAAKC,OAAOO,aAGQ,QAA1B,EAAAf,EAAKO,KAAKS,YAAYC,YAAI,OAA1B,EAA4BC,OAC9B,qBAAGpB,UAAU,iBAAe,yBACH,IACtBE,EAAKO,KAAKS,aAAehB,EAAKO,KAAKS,YAAYC,KAC5CjB,EAAKO,KAAKS,YAAYC,KAAKlB,KAAI,SAACoB,EAAKlB,GAAK,OACxC,wBAAMC,IAAKD,GACT,gBAAC,KAAI,CAACY,GAAE,SAAWM,GAAM,IAAGA,GAC3BlB,EAAQD,EAAKO,KAAKS,YAAYC,KAAKC,OAAS,EAAI,KAAO,GACnD,IAET,YACC,KACP,qBAAGpB,UAAU,aAAW,gBACRJ,EAAO,IAAI0B,KAAKpB,EAAKO,KAAKC,OAAOa,OAAOC,WAEpD,IAId,C,+EC7Ce,SAASC,EAAM,GAAc,IAAZC,EAAO,EAAPA,QAC9B,OACE,uBAAK1B,UAAU,SACZ0B,EAAQC,iBACP,gBAAC,KAAI,CAACZ,GAAIW,EAAQC,kBAAiB,eACjC,KACHD,EAAQE,aACP,gBAAC,KAAI,CAACb,GAAIW,EAAQE,cAAa,WAC7B,KAGV,C,wHCTe,SAASC,EAAQ,GAAwB,IAAtBC,EAAW,EAAXA,YAAa5B,EAAI,EAAJA,KAC7C,OACE,gBAAC,IAAM,KACL,uBAAKF,UAAU,kBACb,qCAEA,gBAAC,IAAQ,CAACD,MAAOG,EAAKH,MAAMgC,QAE5B,gBAAC,IAAK,CAACL,QAASI,IAEhB,gBAAC,KAAI,CAACf,GAAG,aAAW,qBAI5B,C","sources":["webpack://gatsby-garden/./src/components/note-list.jsx","webpack://gatsby-garden/./src/components/pager.jsx","webpack://gatsby-garden/./src/templates/sitemap.jsx"],"sourcesContent":["import React from 'react'\nimport { Link, navigate } from 'gatsby'\nimport '../styles/note.css'\nconst moment = require('moment')\n\nexport default function NoteList({ notes }) {\n  return (\n    <div className=\"block note-cards note-list\">\n      {notes.map((data, index) => (\n        <div\n          className=\"note-area box-feed\"\n          key={index}\n          role=\"button\"\n          tabIndex={index}\n          onClick={() => {\n            navigate(data.node.fields.slug)\n          }}\n          onKeyDown={event => {\n            if (event.keycode === 13) navigate(data.node.fields.slug)\n          }}\n        >\n          <h4 className=\"note-title\">\n            <Link to={`${data.node.fields.slug}`}>\n              {data.node.fields.title}\n            </Link>\n          </h4>\n          <p className=\"note-excerpt\">\n            {data.node.fields.description}\n          </p>\n\n          { data.node.frontmatter.tags?.length ? \n          <p className=\"note-tag-list\">\n            assuntos relacionados:{' '}\n            {data.node.frontmatter && data.node.frontmatter.tags\n              ? data.node.frontmatter.tags.map((tag, index) => (\n                  <span key={index}>\n                    <Link to={`/tags/${tag}`}>#{tag}</Link>\n                    {index < data.node.frontmatter.tags.length - 1 ? ', ' : ''}\n                  </span>\n                ))\n              : 'sem tags'}\n          </p> : null }\n          <p className=\"note-date\">\n            publicado em {moment(new Date(data.node.fields.date)).fromNow()}\n          </p>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport '../styles/pager.css'\n\nexport default function Pager({ context }) {\n  return (\n    <div className=\"pager\">\n      {context.previousPagePath ? (\n        <Link to={context.previousPagePath}>&lt; Previous </Link>\n      ) : null}\n      {context.nextPagePath ? (\n        <Link to={context.nextPagePath}> Next &gt;</Link>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../layout/layout'\nimport NoteList from '../components/note-list'\nimport Pager from '../components/pager'\n\nexport default function Sitemap({ pageContext, data }) {\n  return (\n    <Layout>\n      <div className=\"column is-half\">\n        <h1>Sitemap</h1>\n\n        <NoteList notes={data.notes.edges} />\n\n        <Pager context={pageContext} />\n\n        <Link to=\"/note-map\">Map of All Notes</Link>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    notes: allMdx(\n      skip: $skip\n      limit: $limit\n      filter: { fields: { visibility: { eq: \"public\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            title\n            date\n            excerpt\n          }\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["moment","require","NoteList","notes","className","map","data","index","key","role","tabIndex","onClick","navigate","node","fields","slug","onKeyDown","event","keycode","to","title","description","frontmatter","tags","length","tag","Date","date","fromNow","Pager","context","previousPagePath","nextPagePath","Sitemap","pageContext","edges"],"sourceRoot":""}